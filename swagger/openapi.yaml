openapi: 3.1.3
info:
  title: Swagger Go api - OpenAPI 3.0
  version: 1.0.11
servers:
  - url: http://localhost:8080
paths:
  /users/:
    get:
      tags:
        - users
      summary: get users
      description: Returns list
      parameters:
        - in: query
          required: false
          name: sort
          schema:
            type: string
            example: id--desc
          description: sort field-direction
        - in: query
          required: false
          name: filter
          schema:
            type: string
            example: login--test1
          description: field to filter-value
      security:
        - basicAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersList"
        "400":
          description: Invalid route
    post:
      tags:
        - users
      summary: Add a new user
      description: Add a new user, return its id
      requestBody:
        description: Create a new user
        required: true
        content:
          application/json:
            schema:
              required:
                - "login"
                - "password"
                - "email"
                - "role_id"
              properties:
                login:
                  description: Login
                  example: test1
                  type: string
                password:
                  type: string
                  example: "12345aA!!"
                email:
                  type: string
                  example: "admin@admin.com"
                role_id:
                  type: integer
                  example: 1
      security:
        - basicAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionSuccess"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
  /users/{id}:
    put:
      tags:
        - users
      summary: update user
      description: update user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 3
          description: user id
      requestBody:
        description: update user
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  example: 1@123test-updated.com
                name:
                  type: string
                  example: testUpdatedLogin1
              type: object
      security:
        - basicAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionSuccess"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
    delete:
      tags:
        - users
      summary: delete user
      description: delete user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 9
          description: user id
      security:
        - basicAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionSuccess"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
  /roles/:
    get:
      tags:
        - roles
      summary: get roles
      description: Returns list
      parameters:
        - in: query
          required: false
          name: sort
          schema:
            type: string
            example: id--desc
          description: sort field-direction
        - in: query
          required: false
          name: filter
          schema:
            type: string
            example: title--Admin
          description: field to filter-value
      security:
        - basicAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RolesList"
        "400":
          description: Invalid route
    post:
      tags:
        - roles
      summary: Add a new role
      description: Add a new role, return its id
      requestBody:
        description: Create a new role
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataForCreatingRole"
      security:
        - basicAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionSuccess"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
  /roles/{id}:
    delete:
      tags:
        - roles
      summary: delete role
      description: delete role
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 9
          description: role id
      security:
        - basicAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionSuccess"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
  /checklists/:
    post:
      tags:
        - checklists
      summary: Add a new checklist
      description: Add a new checklist, return its id
      requestBody:
        description: Create a new checklist
        required: true
        content:
          application/json:
            schema:
              required:
                - "user_id"
                - "title"
              properties:
                user_id:
                  description: user_id
                  example: 3
                  type: integer
                title:
                  type: string
                  example: "new task sheet"
      security:
        - basicAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionSuccess"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
    get:
      tags:
        - checklists
      summary: get checklists
      description: Returns list
      parameters:
        - in: query
          required: false
          name: sort
          schema:
            type: string
            example: id--desc
          description: sort field-direction
        - in: query
          required: false
          name: filter
          schema:
            type: string
            example: title--test1
          description: field to filter-value
      security:
        - basicAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChecklistsList"
        "400":
          description: Invalid route
  /checklists/{id}:
    put:
      tags:
        - checklists
      summary: update checklist
      description: update checklist
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 3
          description: checklist id
      requestBody:
        description: update checklist
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                  example: test_update4
                user_id:
                  type: integer
                  example: 1
              type: object
      security:
        - basicAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionSuccess"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
    delete:
      tags:
        - checklists
      summary: delete checklist
      description: delete checklist
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 9
          description: checklist id
      security:
        - basicAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionSuccess"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
  /checklists/items/:
    post:
      tags:
        - checklists items
      summary: Add a new checklist item
      description: Add a new checklist item, return its id
      requestBody:
        description: Create a new checklist item
        required: true
        content:
          application/json:
            schema:
              required:
                - "checklist_id"
                - "is_completed"
                - "description"
              properties:
                checklist_id:
                  description: checklist_id
                  example: 3
                  type: integer
                is_completed:
                  description: task completion mark
                  example: 1
                  type: boolean
                description:
                  description: job description
                  type: string
                  example: "learn verb tenses"
      security:
        - basicAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionSuccess"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
  /checklists/{id}/items/:
    get:
      tags:
        - checklist items
      summary: get checklist items
      description: Returns list
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 3
          description: checklist id
        - in: query
          required: false
          name: sort
          schema:
            type: string
            example: id--desc
          description: sort field-direction
      security:
        - basicAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChecklistItemsList"
        "400":
          description: Invalid route
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: basicAuth
  schemas:
    UsersList:
      type: object
      properties:
        Success:
          type: boolean
          example: true
        Message:
          type: array
          items:
            $ref: "#/components/schemas/Users"
        Total:
          type: integer
          example: 2
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
    User:
      type: object
      properties:
        checklists_quantity:
          type: integer
          example: 2
        created_at:
          type: string
          example: "2025-05-11T00:00:00Z"
        email:
          type: string
          example: "admin@admin.com"
        id:
          type: integer
          example: 1
        login:
          type: string
          example: "test1"
        role_id:
          type: integer
          example: 1
    ActionSuccess:
      type: object
      properties:
        Success:
          type: boolean
          example: true
        Message:
          type: object
          properties:
            id:
              type: integer
              example: 1
    RolesList:
      type: object
      properties:
        Success:
          type: boolean
          example: true
        Message:
          type: array
          items:
            $ref: "#/components/schemas/Roles"
        Total:
          type: integer
          example: 2
    Roles:
      type: array
      items:
        $ref: "#/components/schemas/Role"
    Role:
      type: object
      properties:
        abilities:
          type: object
          properties:
            users:
              $ref: "#/components/schemas/Abilities"
            roles:
              $ref: "#/components/schemas/Abilities"
            checklists:
              $ref: "#/components/schemas/Abilities"
            checklists_items:
              $ref: "#/components/schemas/Abilities"
        created_at:
          type: string
          example: "2025-05-11T00:00:00Z"
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Admin"
    Abilities:
      type: object
      properties:
        create: 
          description: 1 possible, 0 not available
          type: integer
          example: 1
        read:
          description: 1 possible, 0 not available
          type: integer
          example: 1
        update:
          description: 1 possible, 0 not available
          type: integer
          example: 0
        delete:
          description: 1 possible, 0 not available
          type: integer
          example: 0
    DataForCreatingRole:
      type: object
      properties:
        abilities:
          type: object
          properties:
            users:
              $ref: "#/components/schemas/Abilities"
            roles:
              $ref: "#/components/schemas/Abilities"
            checklists:
              $ref: "#/components/schemas/Abilities"
            checklists_items:
              $ref: "#/components/schemas/Abilities"
        title:
          type: string
          example: "User123"
    ChecklistsList:
      type: object
      properties:
        Success:
          type: boolean
          example: true
        Message:
          type: array
          items:
            $ref: "#/components/schemas/Checklists"
        Total:
          type: integer
          example: 2
    Checklists:
      type: array
      items:
        $ref: "#/components/schemas/Checklist"
    Checklist:
      type: object
      properties:
        user_id:
          type: integer
          example: 1
        created_at:
          type: string
          example: "2025-05-11T00:00:00Z"
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "new task sheet"
    ChecklistItemsList:
      type: object
      properties:
        Success:
          type: boolean
          example: true
        Message:
          type: array
          items:
            $ref: "#/components/schemas/ChecklistItems"
        Total:
          type: integer
          example: 2
    ChecklistItems:
      type: array
      items:
        $ref: "#/components/schemas/ChecklistItem"
    ChecklistItem:
      type: object
      properties:
        checklist_id:
          description: checklist_id
          example: 3
          type: integer
        is_completed:
          description: task completion mark
          example: 1
          type: boolean
        description:
          description: job description
          type: string
          example: "learn verb tenses"
